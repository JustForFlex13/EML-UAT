/*
 * WSCursus Externe
 * Service externe du webservice WSCursus.
 *
 * The version of the OpenAPI document: 1
 * Contact: taubert@em-lyon.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASUserAuthentificationResponseModel
 */
public class OASUserAuthentificationResponseModel {
    /**
     * Get requestAt
     * @return requestAt
     */
    public Datetime requestAt { get; set; }

    /**
     * Get expiresIn
     * @return expiresIn
     */
    public Datetime expiresIn { get; set; }

    /**
     * Get tokenType
     * @return tokenType
     */
    public String tokenType { get; set; }

    /**
     * Get accessToken
     * @return accessToken
     */
    public String accessToken { get; set; }

    public static OASUserAuthentificationResponseModel getExample() {
        OASUserAuthentificationResponseModel userAuthentificationResponseModel = new OASUserAuthentificationResponseModel();
          userAuthentificationResponseModel.requestAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          userAuthentificationResponseModel.expiresIn = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          userAuthentificationResponseModel.tokenType = '';
          userAuthentificationResponseModel.accessToken = '';
        return userAuthentificationResponseModel;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUserAuthentificationResponseModel) {           
            OASUserAuthentificationResponseModel userAuthentificationResponseModel = (OASUserAuthentificationResponseModel) obj;
            return this.requestAt == userAuthentificationResponseModel.requestAt
                && this.expiresIn == userAuthentificationResponseModel.expiresIn
                && this.tokenType == userAuthentificationResponseModel.tokenType
                && this.accessToken == userAuthentificationResponseModel.accessToken;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (requestAt == null ? 0 : System.hashCode(requestAt));
        hashCode = (17 * hashCode) + (expiresIn == null ? 0 : System.hashCode(expiresIn));
        hashCode = (17 * hashCode) + (tokenType == null ? 0 : System.hashCode(tokenType));
        hashCode = (17 * hashCode) + (accessToken == null ? 0 : System.hashCode(accessToken));
        return hashCode;
    }
}