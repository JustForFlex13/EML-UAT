/*
 * WSCursus Externe
 * Service externe du webservice WSCursus.
 *
 * The version of the OpenAPI document: 1
 * Contact: taubert@em-lyon.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASErrorDetails
 */
public class OASErrorDetails implements OAS.MappedProperties {
    /**
     * Get statusCode
     * @return statusCode
     */
    public Integer statusCode { get; set; }

    /**
     * Get correlationIdentifier
     * @return correlationIdentifier
     */
    public String correlationIdentifier { get; set; }

    /**
     * Get transactionIdentifier
     * @return transactionIdentifier
     */
    public String transactionIdentifier { get; set; }

    /**
     * Get path
     * @return path
     */
    public String path { get; set; }

    /**
     * Get code
     * @return code
     */
    public String code { get; set; }

    /**
     * Get message
     * @return message
     */
    public String message { get; set; }

    /**
     * Get validationError
     * @return validationError
     */
    public List<OASValidationError> validationError { get; set; }

    /**
     * Get exceptionMessage
     * @return exceptionMessage
     */
    public String exceptionMessage { get; set; }

    /**
     * Get exceptionStackTrace
     * @return exceptionStackTrace
     */
    public String exceptionStackTrace { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'StatusCode' => 'statusCode',
        'CorrelationIdentifier' => 'correlationIdentifier',
        'TransactionIdentifier' => 'transactionIdentifier',
        'Path' => 'path',
        'Code' => 'code',
        'Message' => 'message',
        'ValidationError' => 'validationError',
        'ExceptionMessage' => 'exceptionMessage',
        'ExceptionStackTrace' => 'exceptionStackTrace'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASErrorDetails() {
        validationError = new List<OASValidationError>();
    }

    public static OASErrorDetails getExample() {
        OASErrorDetails errorDetails = new OASErrorDetails();
          errorDetails.statusCode = 0;
          errorDetails.correlationIdentifier = '';
          errorDetails.transactionIdentifier = '';
          errorDetails.path = '';
          errorDetails.code = '';
          errorDetails.message = '';
          errorDetails.validationError = new List<OASValidationError>{OASValidationError.getExample()};
          errorDetails.exceptionMessage = '';
          errorDetails.exceptionStackTrace = '';
        return errorDetails;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASErrorDetails) {           
            OASErrorDetails errorDetails = (OASErrorDetails) obj;
            return this.statusCode == errorDetails.statusCode
                && this.correlationIdentifier == errorDetails.correlationIdentifier
                && this.transactionIdentifier == errorDetails.transactionIdentifier
                && this.path == errorDetails.path
                && this.code == errorDetails.code
                && this.message == errorDetails.message
                && this.validationError == errorDetails.validationError
                && this.exceptionMessage == errorDetails.exceptionMessage
                && this.exceptionStackTrace == errorDetails.exceptionStackTrace;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (statusCode == null ? 0 : System.hashCode(statusCode));
        hashCode = (17 * hashCode) + (correlationIdentifier == null ? 0 : System.hashCode(correlationIdentifier));
        hashCode = (17 * hashCode) + (transactionIdentifier == null ? 0 : System.hashCode(transactionIdentifier));
        hashCode = (17 * hashCode) + (path == null ? 0 : System.hashCode(path));
        hashCode = (17 * hashCode) + (code == null ? 0 : System.hashCode(code));
        hashCode = (17 * hashCode) + (message == null ? 0 : System.hashCode(message));
        hashCode = (17 * hashCode) + (validationError == null ? 0 : System.hashCode(validationError));
        hashCode = (17 * hashCode) + (exceptionMessage == null ? 0 : System.hashCode(exceptionMessage));
        hashCode = (17 * hashCode) + (exceptionStackTrace == null ? 0 : System.hashCode(exceptionStackTrace));
        return hashCode;
    }
}